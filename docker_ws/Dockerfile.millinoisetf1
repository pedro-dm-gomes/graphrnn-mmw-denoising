FROM soumith/manylinux-cuda90 AS cuda9

FROM python:3.6

RUN rm -rf /usr/local/cuda
RUN rm -rf /usr/local/cuda-10.0
COPY --from=cuda9 /usr/local/cuda-9.0 /usr/local/cuda-9.0
COPY --from=cuda9 /usr/local/cuda /usr/local/cuda

RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/3bf863cc.pub
RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub
RUN apt update && apt upgrade -y
RUN apt-get update && apt-get install -y \
    git \
    wget \
    unzip \
    vim

RUN DEBIAN_FRONTEND=noninteractive apt install -y make build-essential libssl-dev zlib1g-dev \
    libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev \
    libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev \
    libgdbm-dev libnss3-dev libedit-dev libc6-dev

# WORKDIR /tmp
# RUN wget https://www.python.org/ftp/python/3.6.15/Python-3.6.15.tgz
# RUN tar -xzf Python-3.6.15.tgz
# RUN cd Python-3.6.15 && \
#     ./configure --enable-optimizations -with-lto --with-pydebug && \
#     make -j 16 && \
#     make altinstall

# RUN ln -s /usr/local/bin/python3.6 /usr/local/bin/python3
# RUN ln -s /usr/local/bin/python3.6 /usr/local/bin/python
# RUN apt remove -y python3-pip
RUN python3 -m pip install --upgrade pip

RUN pip3 install tensorflow==1.12.3
RUN cd /tmp && wget https://files.pythonhosted.org/packages/55/7e/bec4d62e9dc95e828922c6cec38acd9461af8abe749f7c9def25ec4b2fdb/tensorflow_gpu-1.12.0-cp36-cp36m-manylinux1_x86_64.whl
RUN pip3 install /tmp/tensorflow_gpu-1.12.0-cp36-cp36m-manylinux1_x86_64.whl
RUN pip3 install numpy==1.19.5
RUN pip3 install matplotlib==3.3.4
RUN apt -y install gfortran libopenblas-dev liblapack-dev
RUN pip3 install scipy==1.5.4
RUN pip3 install wheel cython
# RUN pip3 install tensorflow-gpu
# RUN cd /tmp && wget https://files.pythonhosted.org/packages/a5/ad/933140e74973fb917a194ab814785e7c23680ca5dee6d663a509fe9579b6/tensorflow_gpu-1.15.0-cp36-cp36m-manylinux2010_x86_64.whl
# RUN pip3 install /tmp/tensorflow_gpu-1.15.0-cp36-cp36m-manylinux2010_x86_64.whl
COPY ./requirements.txt /tmp/requirements.txt
RUN pip3 install -r /tmp/requirements.txt

# installing more libs from inside the container
# CUDA_HOME = /usr/local/cuda
# 1) modules/tf_ops/3d_interpolation
# RUN ln -s /usr/local/lib/python3.6/dist-packages/tensorflow_core/libtensorflow_framework.so.1 \
#     /usr/local/lib/python3.6/dist-packages/tensorflow_core/libtensorflow_framework.so
# RUN ln -s /usr/local/cuda/lib64/libcublas.so.10.0 /usr/local/cuda/lib64/libcublas.so
# RUN ln -s /usr/local/cuda/lib64/libcublas.so.10.0 /usr/local/cuda/lib64/libcublas.sco

# 2) modules/tf_ops/approxmatch
# RUN apt install -y cuda-toolkit-12-1

# RUN ln -s /usr/local/cuda/lib64/libcudart.so /usr/local/cuda/lib64/libcudart.so.9.0
# RUN ln -s /usr/local/cuda/lib64/libcublas.so /usr/local/cuda/lib64/libcublas.so.9.0
# RUN ln -s /usr/local/cuda/lib64/libcufft.so /usr/local/cuda/lib64/libcufft.so.9.0
# RUN ln -s /usr/local/cuda/lib64/libcurand.so /usr/local/cuda/lib64/libcurand.so.9.0
# RUN ln -s /usr/local/cuda/lib64/libcusparse.so /usr/local/cuda/lib64/libcusparse.so.9.0
# RUN ln -s /usr/local/cuda/lib64/libcusolver.so /usr/local/cuda/lib64/libcusolver.so.9.0